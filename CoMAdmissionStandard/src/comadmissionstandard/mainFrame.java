/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package comadmissionstandard;

import java.awt.Color;
import java.awt.Font;
import java.awt.FontFormatException;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author willi
 */
public class mainFrame extends javax.swing.JFrame {

    /**
     * Creates new form mainFrame
     */
    public mainFrame() throws FontFormatException, IOException {
        initComponents();
        getContentPane().setBackground(new Color(0, 124, 186));
        jPanel1.setBackground(new Color(255, 255, 255));
        Font titleFont = Font.createFont(Font.TRUETYPE_FONT, new File("fonts\\Open_Sans\\OpenSans-Regular.ttf")).deriveFont(72f);
        jLabel1.setFont(titleFont);
        jLabel1.setForeground(new Color(0, 124, 186));
        
        Font inputFont = Font.createFont(Font.TRUETYPE_FONT, new File("fonts\\Open_Sans\\OpenSans-Regular.ttf")).deriveFont(24f);
        label.setFont(inputFont);
        label1.setFont(inputFont);
        label2.setFont(inputFont);
        label3.setFont(inputFont);
        guardians.setFont(inputFont);
        youths.setFont(inputFont);
        children.setFont(inputFont);
        infants.setFont(inputFont);
        check.setFont(inputFont);
        help.setFont(inputFont);
        
        Font resultFont = Font.createFont(Font.TRUETYPE_FONT, new File("fonts\\Open_Sans\\OpenSans-Regular.ttf")).deriveFont(32f);
        result.setFont(resultFont);
        description.setFont(resultFont);
        description1.setFont(resultFont);
        result.setForeground(new Color(0, 124, 186));
        description.setForeground(new Color(0, 124, 186));
        description1.setForeground(new Color(0, 124, 186));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        help = new javax.swing.JButton();
        label = new javax.swing.JLabel();
        label1 = new javax.swing.JLabel();
        label2 = new javax.swing.JLabel();
        label3 = new javax.swing.JLabel();
        guardians = new javax.swing.JTextField();
        youths = new javax.swing.JTextField();
        children = new javax.swing.JTextField();
        infants = new javax.swing.JTextField();
        check = new javax.swing.JButton();
        result = new javax.swing.JLabel();
        description = new javax.swing.JLabel();
        info = new javax.swing.JLabel();
        info1 = new javax.swing.JLabel();
        description1 = new javax.swing.JLabel();
        info2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 124, 186));
        setForeground(new java.awt.Color(0, 124, 186));
        setPreferredSize(new java.awt.Dimension(1500, 950));

        jLabel1.setText("City of Mississauga Admission Standard");

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\willi\\Documents\\NetBeansProjects\\CoMAdmissionStandard\\img\\logo.png")); // NOI18N

        help.setText("View Standard");
        help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpActionPerformed(evt);
            }
        });

        label.setText("Number of Guardians (14+):");

        label1.setText("Number of Independent Youths (10-13):");

        label2.setText("Number of Dependent Youths (6-9):");

        label3.setText("Number of Dependent Children (5 and under):");

        guardians.setText("0");
        guardians.setToolTipText("");

        youths.setText("0");
        youths.setToolTipText("");

        children.setText("0");

        infants.setText("0");

        check.setText("Check Standard");
        check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkActionPerformed(evt);
            }
        });

        info.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        info.setText("All individuals aged 10 and up may enter the swim unaccompanied. ");

        info1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        info1.setText("All individuals aged 6-9 may enter the swim with an out of water guardian if they pass the swim test.");

        info2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        info2.setText("Individuals aged 5 and under, or aged 6 to 9 that do not pass the swim test must remain within arms reach.");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(info)
                            .addComponent(info1)
                            .addComponent(info2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(description1)
                            .addComponent(description)
                            .addComponent(result)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(label1)
                                        .addGap(156, 156, 156))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(label)
                                            .addComponent(label3)
                                            .addComponent(label2)
                                            .addComponent(help))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(infants, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                        .addComponent(children, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(youths, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addComponent(guardians, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(check, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label)
                    .addComponent(guardians, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label1)
                    .addComponent(youths, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label2)
                    .addComponent(children, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label3)
                    .addComponent(infants, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(check)
                    .addComponent(help))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(result)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(description)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(description1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(info)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(info1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(info2))
                    .addComponent(jLabel2))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void checkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkActionPerformed
        // TODO add your handling code here:
        check();
    }//GEN-LAST:event_checkActionPerformed

    private void helpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpActionPerformed
        // TODO add your handling code here:
        Admission admission = new Admission();
        admission.setVisible(true);
    }//GEN-LAST:event_helpActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public void check() {
        result.setText("");
        description.setText("");
        description1.setText("");
        int numGuardians = Integer.parseInt(guardians.getText());
        int numYouths = Integer.parseInt(youths.getText());
        int numChildren = Integer.parseInt(children.getText());
        int numInfants = Integer.parseInt(infants.getText());
        //LET'S ADD IN ACTUAL NUMBERS
        //Case 1: There are too many infants for each guardian to supervise
        if(numInfants > numGuardians * 2) {
            result.setText("DOES NOT MEET STANDARD");
            description.setText("There must be 1 guardian for every 2 children aged 5 and under.");
            description1.setText((int)((Math.ceil((double)numInfants/2)) - numGuardians) + " more guardian(s) are needed to supervise " + numInfants + " children aged 5 and under.");
        }
        
        //Case 2: There are too many children for each guardian to supervise, even in lifejackets
        else if(numChildren > numGuardians * 8) {
            result.setText("STANDARD IS CONDITITONALLY MET");
            description.setText("There must be 1 guardian for every 8 supervised children WEARING LIFEJACKETS aged 6 to 9.");
            description1.setText("At least " + (numChildren-(numGuardians * 8)) + " child(ren) aged 6-9 must pass the SWIM TEST to meet the standard." );
        }
        
        
        else if(numInfants == numGuardians * 2 && numInfants > 0 && numChildren > 0) {
            result.setText("STANDARD IS CONDITIONALLY MET");
            description.setText("Any children aged 6-9 must pass the SWIM TEST to meet the standard.");
            description1.setText("All " + numChildren + " child(ren) must pass the SWIM TEST to meet the standard.");
        }
        
        //Case 3: There are infants that require guardian supervision, as well as potential children that may need supervision
        else if(numInfants <= numGuardians * 2 && numChildren > numGuardians  && numInfants > 0 && numChildren > 0) {
            int freeGuardians = numGuardians - (int)((Math.ceil((double)numInfants/2)));
            result.setText("STANDARD IS CONDITIONALLY MET");
            description.setText("Guardians supervising a child 5 and under can only supervise 1 other child, regardless of age.");
            if(freeGuardians > 0) {
                description1.setText("At least " + (int)(numChildren - (freeGuardians*8)) + " child(ren) must pass the SWIM TEST to meet the standard.");
            }
            else if(freeGuardians <= 0) {
                description1.setText("All " + numChildren + " child(ren) must pass the SWIM TEST to meet the standard.");
            }
        }
        
        
        //Case 4: There are too many children for a guardian to supervise unless lifejackets are worn.
        else if(numChildren > numGuardians * 4 && numInfants == 0) {
            result.setText("STANDARD IS CONDITIONALLY MET");
            description.setText("As long as each child aged 6-9 is wearing a LIFEJACKET, the standard is met.");
            description1.setText("OR " + (numChildren-(numGuardians * 4)) + " child(ren) aged 6-9 must pass the swim test to meet the standard.");
        }
        
        else if(numInfants <= numGuardians * 2 && numChildren == 0 && numInfants > 0) {
            result.setText("STANDARD IS MET");
            description.setText("All children aged 5 and under must be within arms reach of a guardian.");
        }
        
        else if(numChildren <= numGuardians * 4 && numInfants == 0 && numChildren > 0) {
            result.setText("STANDARD IS MET");
            description.setText("All children aged 9 and under that do not pass the SWIM TEST must remain within arms reach.");
        }
        
        /*
        else if(numChildren <= numGuardians * 8 && numInfants == 0 && numChildren > 0) {
            result.setText("STANDARD IS MET");
            description.setText("All children aged 9 and under that do not pass the SWIM TEST must remain within arms reach.");
            description1.setText("If there are over 4 children 9 and under requiring supervision, they must all wear LIFEJACKETS.");
        }
        */
        
        else {
            result.setText("STANDARD IS MET");
            description.setText("");
            description1.setText("");
        }
        /*
        CASES:
        Case 1: Too many infants for guardians
        Case 2: Too many children for guardians
        Case 3: Needs a swim test to pass
        Case 4: All good
        
        */
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new mainFrame().setVisible(true);
                } catch (FontFormatException ex) {
                    Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton check;
    private javax.swing.JTextField children;
    private javax.swing.JLabel description;
    private javax.swing.JLabel description1;
    private javax.swing.JTextField guardians;
    private javax.swing.JButton help;
    private javax.swing.JTextField infants;
    private javax.swing.JLabel info;
    private javax.swing.JLabel info1;
    private javax.swing.JLabel info2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel label;
    private javax.swing.JLabel label1;
    private javax.swing.JLabel label2;
    private javax.swing.JLabel label3;
    private javax.swing.JLabel result;
    private javax.swing.JTextField youths;
    // End of variables declaration//GEN-END:variables
}
